import"reflect-metadata";import express from"express";import bodyParser from"body-parser";import*as fs from"fs";import{RouteTable}from"./api/infrastructure/RouteTable.js";import{container}from"tsyringe";import{UsersRepository}from"./api/application/RepositoryImpl/users.repository.js";import{UsersService}from"./api/application/services/users.service.js";import{Pixeldrain}from"./api/application/services/pixeldrain.service.js";import{PATH_RESPONSE_UPLOADS,HTML_USERS_PATH,COOKIE_PATH_UPLOAD}from"../root_path.js";const createDiretoryStream=async r=>{fs.mkdir(r,{recursive:!0},(r=>{}))},createPaths=()=>{[PATH_RESPONSE_UPLOADS,HTML_USERS_PATH,COOKIE_PATH_UPLOAD].forEach((async r=>{await createDiretoryStream(r)}))},UPDATE_KEY_PIXELDRAIN=async()=>{const r=new Pixeldrain;await r.updateKey()};export const App=express();createPaths(),UPDATE_KEY_PIXELDRAIN(),App.use(bodyParser.json()),RouteTable(App),container.register(UsersRepository,{useClass:UsersRepository}),container.register(UsersService,{useClass:UsersService});