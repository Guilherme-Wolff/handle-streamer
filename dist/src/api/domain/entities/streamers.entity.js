var __decorate=this&&this.__decorate||function(e,t,a,r){var o,n=arguments.length,d=n<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,a):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,t,a,r);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(d=(n<3?o(d):n>3?o(t,a,d):o(t,a))||d);return n>3&&d&&Object.defineProperty(t,a,d),d},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};import{BeforeInsert,BeforeUpdate,Column,CreateDateColumn,Entity,ManyToMany,PrimaryGeneratedColumn,UpdateDateColumn}from"typeorm";import{Users}from"./users.entity.js";let Streamers=class{id;name;country;avatar;online;activated;album_id;platform;baned;mainurlm3u8;followers;number_followers;is_saving;created_at;updated_at;constructor(e,t,a="",r=""){this.name=e,this.platform=t,this.avatar=a,this.country=r}async updateNumberFollowers(){this.number_followers=this.followers?this.followers.length:0}};__decorate([PrimaryGeneratedColumn("uuid"),__metadata("design:type",String)],Streamers.prototype,"id",void 0),__decorate([Column({unique:!1,nullable:!1}),__metadata("design:type",String)],Streamers.prototype,"name",void 0),__decorate([Column({nullable:!0}),__metadata("design:type",String)],Streamers.prototype,"country",void 0),__decorate([Column({nullable:!0}),__metadata("design:type",String)],Streamers.prototype,"avatar",void 0),__decorate([Column({nullable:!0,default:!1}),__metadata("design:type",Boolean)],Streamers.prototype,"online",void 0),__decorate([Column({nullable:!0,default:!1}),__metadata("design:type",Boolean)],Streamers.prototype,"activated",void 0),__decorate([Column({nullable:!0}),__metadata("design:type",String)],Streamers.prototype,"album_id",void 0),__decorate([Column(),__metadata("design:type",String)],Streamers.prototype,"platform",void 0),__decorate([Column({nullable:!0,default:!1}),__metadata("design:type",Boolean)],Streamers.prototype,"baned",void 0),__decorate([Column({nullable:!0}),__metadata("design:type",String)],Streamers.prototype,"mainurlm3u8",void 0),__decorate([ManyToMany((()=>Users),(e=>e.following)),__metadata("design:type",Array)],Streamers.prototype,"followers",void 0),__decorate([Column({nullable:!0,default:0}),__metadata("design:type",Number)],Streamers.prototype,"number_followers",void 0),__decorate([Column({nullable:!0,default:!1}),__metadata("design:type",Boolean)],Streamers.prototype,"is_saving",void 0),__decorate([CreateDateColumn(),__metadata("design:type",Date)],Streamers.prototype,"created_at",void 0),__decorate([UpdateDateColumn(),__metadata("design:type",Date)],Streamers.prototype,"updated_at",void 0),__decorate([BeforeInsert(),BeforeUpdate(),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],Streamers.prototype,"updateNumberFollowers",null),Streamers=__decorate([Entity(),__metadata("design:paramtypes",[String,String,String,String])],Streamers);export{Streamers};