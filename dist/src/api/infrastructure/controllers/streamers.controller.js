import"reflect-metadata";import{Router}from"express";import{container}from"tsyringe";import{StreamersService}from"../../application/services/streamers.service.js";import{HttpStatus}from"../utils/http-status.js";import{UploaderService}from"../../application/services/uploader.imgbb.service.js";import{CountryService}from"../../application/services/country.service.js";class StreamersController{_router=Router();StreamersService=container.resolve(StreamersService);UploaderService=container.resolve(UploaderService);countryService=container.resolve(CountryService);constructor(){this._configure()}_configure(){this._router.post("/savestreamer",(async(t,e,r)=>{try{let{streamer:r,platform:s}=t.body;const a=await this.StreamersService.streamerExistInTiktok(r,s);if(a?.exist||e.send({status:"fail"}),a?.exist){const{sucess:t,url:i}=await this.UploaderService.userImageUploaderBunkr(a.url);if(t){const t=await this.countryService.getCountry(r,s);await this.StreamersService.addStreamer(r,s,i,t.country)}e.send({status:"ok"})}}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}})),this._router.post("/updatestreameravatar",(async(t,e,r)=>{try{let{streamer:r,platform:s}=t.body;const a=await this.StreamersService.getAvatarInTiktok(r,s);if(a?.exist||e.send({status:"streamer not exist"}),a?.exist){const{sucess:t,url:i}=await this.UploaderService.userImageUploaderBunkr(a.url);t&&await this.StreamersService.updateAvatarUrl(r,s,i),e.send({status:"ok"})}}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}})),this._router.post("/updateallavatar",(async(t,e,r)=>{try{const t=await this.StreamersService.getAllStreamersNameEAvatar();let r=0;for(const s of t)setTimeout((async()=>{try{const t=await this.StreamersService.getAvatarInTiktok(s.name,"tiktok");if(t?.exist||e.send({status:"streamer not exist"}),t?.exist){const{sucess:e,url:r}=await this.UploaderService.userImageUploaderBunkr(t.url);e&&await this.StreamersService.updateAvatarUrl(s.name,"tiktok",r)}}catch(t){}}),r),r+=1e4;e.send({status:"ok"})}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}})),this._router.post("/updateallcountry",(async(t,e,r)=>{try{const t=await this.StreamersService.getStreamersWithoutSpecificCountries();let r=0;for(const s of t)setTimeout((async()=>{try{const t=await this.StreamersService.getAvatarInTiktok(s.name,"tiktok");if(t?.exist||e.send({status:"streamer not exist"}),t?.exist){const t=await this.countryService.getCountry(s.name,"tiktok");t&&await this.StreamersService.updateCountry(s.name,"tiktok",t.country)}}catch(t){}}),r),r+=1e4;e.send({status:"ok"})}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}})),this._router.get("/streamersbuned",(async(t,e,r)=>{try{const t=await this.StreamersService.getStreamersForBan();if(!t)return;let r=0;for(const e of t)setTimeout((async()=>{try{const t=await this.StreamersService.getAvatarInTiktok(e.name,"tiktok");t?.exist||this.StreamersService.addBan(e.name,"tiktok")}catch(t){this.StreamersService.addBan(e.name,"tiktok")}}),r),r+=5e3;e.send({status:"ok"})}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}}))}get router(){return this._router}}export default(new StreamersController).router;