import"reflect-metadata";import{Router}from"express";import{container}from"tsyringe";import{AuthService}from"../../application/services/auth.service.js";import{UsersService}from"../../application/services/users.service.js";import{saveCookies}from"../../application/config/saveCookies.js";import*as fs from"fs";import path from"path";import multer from"multer";import{COOKIE_PATH_UPLOAD}from"../../../../root_path.js";const storage=multer.diskStorage({destination:(e,o,r)=>{const t=path.join(COOKIE_PATH_UPLOAD);fs.existsSync(t)||fs.mkdirSync(t,{recursive:!0}),r(null,t)},filename:(e,o,r)=>{r(null,Date.now()+"-"+Math.round(1e9*Math.random())+path.extname(o.originalname))}}),fileFilter=(e,o,r)=>{"text/plain"===o.mimetype||".txt"===path.extname(o.originalname).toLowerCase()?r(null,!0):r(new Error("Apenas arquivos .txt sÃ£o permitidos"))},upload=multer({storage:storage,limits:{fileSize:5242880}}),setCookieHandler=async(e,o,r)=>{try{if(e.file){const r=fs.readFileSync(e.file.path,"utf8");return saveCookies(r),fs.readdir(COOKIE_PATH_UPLOAD,((e,o)=>{e||o.forEach((e=>{const o=path.join(COOKIE_PATH_UPLOAD,e);fs.unlink(o,(e=>{}))}))})),void o.json({message:"Cookies salvos com sucesso",file:{originalname:e.file.originalname,path:e.file.path,size:e.file.size}})}return void o.status(400).json({error:"Nenhum arquivo ou cookies enviados"})}catch(e){return}};class CookiesController{_router=Router();AuthService=container.resolve(AuthService);UsersService=container.resolve(UsersService);constructor(){this._configure()}_configure(){const e=[upload.single("file"),setCookieHandler];this._router.post("/setcookie",e)}get router(){return this._router}}export default(new CookiesController).router;