import"reflect-metadata";import{Router}from"express";import{container}from"tsyringe";import{SaveLiveService}from"../../application/services/savelive.service.js";import{HttpStatus}from"../utils/http-status.js";class SaveLiveController{_router=Router();SaveLiveService=container.resolve(SaveLiveService);constructor(){this._configure()}_configure(){this._router.post("/save",(async(t,e,s)=>{try{let{streamer:s,platform:r}=t.body;if(s&&"tiktok"===r){const t={output_name_live:"",url_live:`https://tiktok.com/@${s}/live`,user_id:"JWT"},r=await this.SaveLiveService.saveLive(t);e.send(r)}else e.send({status:"fail"})}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}})),this._router.post("/stopsaving",(async(t,e,s)=>{try{let{data:s}=t.body;await this.SaveLiveService.stopSavingLive(s.process_id);const r=await this.SaveLiveService.stopSavingLive(s.process_id);e.send(r)}catch(t){e.status(HttpStatus.BADREQUEST).json({statusCode:HttpStatus.BADREQUEST,error:t.message,stack:t.stack})}}))}get router(){return this._router}}export default(new SaveLiveController).router;