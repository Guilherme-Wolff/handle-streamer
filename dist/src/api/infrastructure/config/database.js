import{createDatabase}from"typeorm-extension";import{dataSource}from"../../application/config/datasource.js";import{config}from"../../application/config/index.js";import{Users}from"../../domain/entities/users.entity.js";import{Streamers}from"../../domain/entities/streamers.entity.js";import{Payment}from"../../domain/entities/payment.entity.js";import ExceptionHandler from"../exceptions/exceptions-handler.js";const entities=[Users,Streamers,Payment],options={type:"postgres",host:config.DB_HOST,port:config.DB_PORT,username:config.DB_USER,password:config.DB_PASSWORD,database:config.DB_NAME,synchronize:!0,logging:!1,entities:entities,subscribers:[],migrations:["../../infrastructure/migrations/*.ts"],ifNotExist:!0},dbConnection=async()=>{let t=0;const e=t=>new Promise((e=>setTimeout(e,t)));for(;t<3;)try{return await createDatabase(options),await dataSource.initialize(),void await dataSource.synchronize()}catch(i){t++,await e(3e3)}throw new ExceptionHandler(500,`database connection failed after ${t} attempts`)};export default dbConnection;