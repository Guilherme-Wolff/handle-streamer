import*as fs from"fs/promises";import*as fs_sync from"node:fs";import{spawn}from"child_process";import{HTML_USERS_PATH}from"../../../../root_path.js";import{Streamers}from"../../domain/entities/streamers.entity.js";import*as cheerio from"cheerio";export class FileUtilities{async streamerExistInTiktok(t,e="tiktok"){const r=`https://www.tiktok.com/@${t}`;let a={exist:!1,url:""};try{const e=t+".html",i=spawn("curl",["-X","GET",r],{stdio:["inherit","pipe","pipe"]}),s=fs_sync.createWriteStream(HTML_USERS_PATH+e);i.stdout.pipe(s),await new Promise(((t,e)=>{i.on("close",(r=>{0===r?t():e(new Error(`Failed to fetch HTML. Exit code: ${r}`))}))}));const o=await this.readFileHTML(t),c=await this.extractAvatar(o),n=await this.fix_url(c);return a.exist=!0,a.url=n.toString(),await this.deleteFile(HTML_USERS_PATH+e),await a}catch(t){throw new Error(t.message)}}async extractAvatar(t,e="tiktok"){const r=await cheerio.load(t),a=await r("body").text().match(/"avatarThumb"\s*:\s*"(.*?)"/);return a&&a[1]?await a[1]:await null}async fix_url(t){const e=await t.replace(/\\u002F/g,"/");return await e}async getStreamer(t,e){try{new Streamers(t,e)}catch(t){throw new Error(t.message)}}async readFileHTML(t){try{const e=HTML_USERS_PATH+t+".html";return await fs.readFile(e,"utf8")}catch(t){throw new Error(t.message)}}async deleteFile(t){try{await fs.unlink(t)}catch(t){return}}}