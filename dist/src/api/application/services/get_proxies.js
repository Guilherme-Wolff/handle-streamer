import*as fs from"fs/promises";import*as fs_sync from"node:fs";import fsPromises from"fs/promises";import{spawn}from"child_process";import*as cheerio from"cheerio";import{HTML_USERS_PATH}from"../../../../root_path.js";const proxyConfig={protocol:"https",host:"host",port:80,auth:"false"};export class ProxiesManager{constructor(){}current_proxies=[];file_name_proxies="freeproxies";async checkFileExists(t){try{return await fsPromises.access(t),!0}catch(t){if("ENOENT"===t.code)return!1;throw t}}async getProxies(t="freeproxies"){try{if(this.current_proxies.length>0)return this.current_proxies;const e=HTML_USERS_PATH+t+".json";if(await this.checkFileExists(e)){const t=await fs.readFile(e,"utf8");return JSON.parse(t)}await this.getProxiesHtmls();if(await this.checkFileExists(e)){const t=await fs.readFile(e,"utf8");return JSON.parse(t)}}catch(t){throw new Error(t.message)}}selectProxy(t){return t<0||t>=this.current_proxies.length?null:this.current_proxies[t]}async getProxiesHtmls(t=this.file_name_proxies,e="http",r="1"){const s=`https://www.freeproxy.world/?type=${e}&anonymity=&country=&speed=&port=&page=${r}`;try{const e=t+".html",r=spawn("curl",["-X","GET",s],{stdio:["inherit","pipe","pipe"]}),i=fs_sync.createWriteStream(HTML_USERS_PATH+e);r.stdout.pipe(i),await new Promise(((t,e)=>{r.on("close",(r=>{0===r?t():e(new Error(`Failed to fetch HTML. Exit code: ${r}`))}))}));const o=await this.readFileHTML(t),a=await this.extractProxies(o);return await a}catch(t){throw new Error(t.message)}}async writeCurrentProxies(t){this.current_proxies=t}async updateStatusProxie(t,e){this.current_proxies[t].in_use=e}async extractProxies(t){const e=cheerio.load(t);let r=[];e("tr").each(((t,s)=>{const i=e(s).find("td.show-ip-div").text().trim(),o=e(s).find('td a[href^="/?port="]').text().trim(),a=(e(s).find("td .table-country").text().trim(),e(s).find("td:nth-child(4)").text().trim(),e(s).find('td a[href^="/?speed="]').text().trim(),e(s).find('td a[href^="/?type="]').text().trim());e(s).find('td a[href^="/?anonymity="]').text().trim();i&&o&&r.push({host:i,port:String(o),protocol:a})}));try{const t={proxies:[...r]},e=JSON.stringify(t,null,2),s=HTML_USERS_PATH+this.file_name_proxies+".json";await fs.writeFile(s,e,"utf8");const i=JSON.parse(await this.readFileJson(this.file_name_proxies));i&&i.proxies.map((t=>{}))}catch(t){}return r}async readFileHTML(t){try{const e=HTML_USERS_PATH+t+".html";return await fs.readFile(e,"utf8")}catch(t){throw new Error(t.message)}}async readFileJson(t){try{const e=HTML_USERS_PATH+t+".json";return await fs.readFile(e,"utf8")}catch(t){throw new Error(t.message)}}async deleteFile(t){try{await fs.unlink(t)}catch(t){return}}}