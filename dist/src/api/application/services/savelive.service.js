var __decorate=this&&this.__decorate||function(e,t,r,a){var s,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,a);else for(var n=e.length-1;n>=0;n--)(s=e[n])&&(i=(o<3?s(i):o>3?s(t,r,i):s(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i};import"reflect-metadata";import{injectable}from"tsyringe";import{spawn}from"child_process";import{processLiveManager}from"../../infrastructure/processManager/processManager.js";import*as fs from"fs";import{PATH_STREAMS_OUTPUT}from"../../../../root_path.js";let SaveLiveService=class{containsTiktokUrl(e){return e.includes("tiktok.com")&&e.includes("/live")}extractUsernameFromUrl=async e=>{if(!this.containsTiktokUrl(e))return await null;const t=e.match(/@([^/]+)\//);return t&&t.length>=2?await t[1]:await null};getHls=async e=>new Promise(((t,r)=>{const a=spawn("yt-dlp",["-g","--skip-download",e]);let s="";a?.stdout.on("data",(e=>{s+=e.toString()})),a.on("close",(e=>{t(s.trim())})),a.on("error",(e=>{t(s.trim())}))}));saveLive=async e=>{let t={status:"add request"};try{let r="";this.containsTiktokUrl(e.url_live)&&(r=await this.extractUsernameFromUrl(e.url_live));const a={status:"running",streamer:String(r),platform:"tiktok",process:null,id:""};await processLiveManager.addProcess(a);return await processLiveManager.listProcesso(),t}catch(e){throw new Error(e.message)}};createDiretoryStream=async e=>{fs.mkdir(PATH_STREAMS_OUTPUT+e,{recursive:!0},(e=>{}))};stopSavingLive=async e=>{let t={status:"stoped"};try{return t}catch(e){throw new Error(e.message)}}};SaveLiveService=__decorate([injectable()],SaveLiveService);export{SaveLiveService};