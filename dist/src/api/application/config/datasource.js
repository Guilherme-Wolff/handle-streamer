import{DataSource}from"typeorm";import{config}from"./index.js";import{Users}from"../../domain/entities/users.entity.js";import{Streamers}from"../../domain/entities/streamers.entity.js";import{Payment}from"../../domain/entities/payment.entity.js";import{Lives}from"../../domain/entities/lives.entity.js";import{primaryEntities}from"./primary_entity.js";import{processLiveManager}from"../../infrastructure/processManager/processManager.js";import{MultiBb}from"./multiple_db.js";let entities=[Users,Streamers,Payment,Lives],host="",configDataSource={type:"postgres",host:config.DB_HOST,port:config.DB_PORT,username:config.DB_USER,password:config.DB_PASSWORD,database:config.DB_NAME,synchronize:!0,logging:!1,entities:primaryEntities,subscribers:[],migrations:["../../infrastructure/migrations/*.ts"],extra:{application_name:"my_app",options:"-c client_encoding=UTF8"}},configDataSource2={type:"postgres",host:config.DB_HOST_SECONDARY,port:config.DB_PORT_SECONDARY,username:config.DB_USER_SECONDARY,password:config.DB_PASSWORD_SECONDARY,database:config.DB_NAME_SECONDARY,synchronize:!0,logging:!1,entities:primaryEntities,subscribers:[],migrations:["../../infrastructure/migrations/*.ts"],extra:{application_name:"my_app2",options:"-c client_encoding=UTF8"}};switch(process.env.NODE_ENV){case"dev":entities=primaryEntities,host=process.env.HOST,configDataSource={type:"postgres",host:config.DB_HOST,port:config.DB_PORT,username:config.DB_USER,password:config.DB_PASSWORD,database:config.DB_NAME,synchronize:!0,logging:!1,entities:entities,subscribers:[],migrations:["../../infrastructure/migrations/*.ts"]};break;case"production":entities=primaryEntities,host=process.env.HOST,configDataSource={type:"postgres",host:config.DB_HOST,port:config.DB_PORT,username:config.DB_USER,password:config.DB_PASSWORD,database:config.DB_NAME,synchronize:!0,logging:!1,entities:primaryEntities,subscribers:[],migrations:["../../infrastructure/migrations/*.ts"]};break;case"test":entities=["dist/src/api/domain/entities/*.js"],configDataSource={type:"sqlite",database:":memory:",synchronize:!0,logging:!1,entities:primaryEntities,migrations:["../../infrastructure/migrations/*.ts"],subscribers:[]};break;default:entities=["dist/src/api/domain/entities/*.js"],host="pg_container"}if("test"===process.env.NODE_ENV){}export let dataSource1=new DataSource(configDataSource);export let dataSource2=new DataSource(configDataSource2);export let dataSource=new MultiBb;dataSource.initialize().then((()=>{processLiveManager.setStreamers()}));