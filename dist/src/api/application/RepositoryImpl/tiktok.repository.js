var __decorate=this&&this.__decorate||function(e,t,r,a){var o,i=arguments.length,s=i<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,a);else for(var n=e.length-1;n>=0;n--)(o=e[n])&&(s=(i<3?o(s):i>3?o(t,r,s):o(t,r))||s);return i>3&&s&&Object.defineProperty(t,r,s),s};import"reflect-metadata";import{injectable}from"tsyringe";import{Equal}from"typeorm";import{Streamers}from"../../domain/entities/streamers.entity.js";import{dataSource}from"../config/datasource.js";import{CrudRepository}from"./crud.repository.js";let TiktokRepository=class extends CrudRepository{async isStreamerExist(e){return!await dataSource.manager.findOne(Streamers,{where:{name:e}})}async saveMainUrl(e,t,r){try{return await dataSource.manager.update(Streamers,!1,{update:{mainurlm3u8:t},where:{name:Equal(e),platform:Equal(r)}})}catch(e){throw new Error(e.message)}}async addStreamer(e,t){try{const r=new Streamers(e,t);return await this.isStreamerExist(e)?await!1:await dataSource.manager.save(r)}catch(e){throw new Error(e.message)}}};TiktokRepository=__decorate([injectable()],TiktokRepository);export{TiktokRepository};